<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml"  backgroundColor="#ffffff"
    creationComplete="initobj()" x="286" y="90">
	<mx:Script>
		<![CDATA[
			import mx.rpc.events.ResultEvent;
			import mx.rpc.http.HTTPService;
			import com.model.SongDataModel;
			//歌曲数据都是在哪找的 ^_^
			private var lrc_url:String ="http://mp3.baidu.com/m?tn=baidump3lyric@ct=150994944@word=";
			// "http://mp3.zhongsou.com/";
			//临时记录搜索结果
			private var lrcData:String;
			//记录搜索所得的歌曲数量
			private var now:Number = 1;
		    [Bindable]
             public var SonglrcurlModel:SongDataModel;
            [Bindable]
            public var lrcname:String;
            [Bindable]
            private var url:String;
			private function initobj():void
			{
				flash.system.System.useCodePage =true;
				
			}
			//发送URL请求，得到搜索结果数据。参数(要搜索的内容)
			
			public function jiaZai(sPost:String):void 
			{
				    var my_lv:URLLoader=new URLLoader();
				    var str:String="";
				   // str.replace("@","&");
				    //发送URL请求
				    var urlrep:URLRequest=new URLRequest("http://127.0.0.1/TalkBook_asp/readHtml3.asp?url="+lrc_url+sPost);
				    trace("http://localhost/TalkBook_asp/readHtml3.asp?url=\'"+lrc_url+sPost+"'");
				    my_lv.load(urlrep);
				     //当数据加载时
				    my_lv.addEventListener(ProgressEvent.PROGRESS,progress);
				    my_lv.addEventListener(IOErrorEvent.IO_ERROR,ioerrorhandler);
				    //当数据加载成功时
				    my_lv.addEventListener(Event.COMPLETE,complete);
				   
			}
			
			private function ioerrorhandler(e:IOErrorEvent):void
			{
				 this.dispatchEvent(new IOErrorEvent("lrcioerror"));
				 this.dispatchEvent(new Event("complete"));
			}
			private function progress(e:ProgressEvent):void
			{
				
				//SongName.text="正在加载数据 请稍等。。。。。。。。。。。。。。。"
			}
			//加载完后
			private function complete(e:Event):void
			{
				//SongName.text='';
	            //转义十六进制序列字符串。将搜索结果转为小写，便于提取。
	            var s:String = unescape(String(e.currentTarget.data).toLowerCase());
	            trace(s);//去掉前面两斜杠可查看搜索结果原始数据
	            now = 1;
	            //解析加载的数据
	            jieXi(s);
	            //trace(s);
				
			}
			/*****  通过代理来避免 安全沙箱
			public function jiaZai(sPost:String):void
			{
				url=lrc_url+sPost;
				lrcread.send();
			}
			private function resulthandler(e:ResultEvent):void
			{
				jieXi(e.result.toString());
			}
			 * <mx:HTTPService url="http://localhost/TalkBook_asp/readHtml3.asp" 
					result="resulthandler(event)" resultFormat="text" useProxy="false" id="lrcread">
				<mx:request xmlns="">
					<url>{url}</url>
				</mx:request>
				</mx:HTTPService>
			 * */
			//解析加载的数据
			private function jieXi(s:String):void {
			  
			    lrcData = s;
			    //如果没找到与搜索内容相关的歌曲信息
			    if (lrcData.indexOf("抱歉，没有找到与")!=-1) 
			    {
			    	
			    this.dispatchEvent(new Event("noresult"));
			    this.dispatchEvent(new Event("complete"));
			    return;
			        
			    }
			    
			    //切出歌曲，歌词及歌手信息               
			    var lrcurl:String = qieChu(lrcData, "<div style=\"word-break:break-all\"><a href=\"","\" target=_blank>");
			    //切出lrc歌词地址，因传回的地址为相对路径，所以得加上url
			   // var sTwo:String = lrc_url+qieChu(lrcData, "<a href=\"", "\"");
			    //输出解析结果 
			  SonglrcurlModel.songlrcurl=lrcurl;
			   this.dispatchEvent(new Event("complete"));
			  //SongName.text+="lrc歌词地址："+sTwo+"\n";
			   
			   // trace("\t\t第 "+now+" 个lrc歌词信息");
			   // trace("歌曲，歌词及歌手信息："+sOne);
			   // trace("lrc歌词地址："+sTwo);
			   // trace("\n");
			    //如果还有下一个地址，递归，继续解析 只需要一个 所以就不用
			   /*  if (lrcData.indexOf(".lrc", 0) != -1) {
			        now++;
			        jieXi(lrcData);
			    } */
			}
			//切出s内 k-j 中间的一段，保存切出后的数据到mp3Data。(这个函数有不理解的地方请按F1看帮助查询)
			private function qieChu(s:String, k:String, j:String):String {
			    var nK:Number = s.indexOf(k);
			    trace(nK);
			    var sK:String = s.substr(nK+k.length);
			    trace(sK);
			    var nJ:Number = sK.indexOf(j);
			    lrcData = sK.substr(nJ+j.length);
			    trace(lrcData);
			    return (sK.substr(0, nJ));
				}	   
	
		]]>
	</mx:Script>
	<mx:Metadata>
		[Event(name="complete")]
		[Event(name="noresult")]
		[Event(name="lrcioerror")]
	</mx:Metadata>
	
</mx:HBox>
