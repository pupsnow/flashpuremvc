<?xml version="1.0" encoding="utf-8"?>
<basecomponent:MyVBox xmlns:mx="http://www.adobe.com/2006/mxml" 
	horizontalAlign="center"  verticalAlign="middle"
	mouseUp="stopDragSelf(event)" doubleClick="addapp(event)" 
	useHandCursor="true" buttonMode="true" mouseChildren="false"
	doubleClickEnabled="true"  mouseDown="startDragSelf(event)"
	mouseOver="para.play();"  color="#ffffff" fontWeight="bold"
	mouseOut="zoom2.play();" 
	xmlns:basecomponent="basecom.basecomponent.*">
	<mx:Script>
		<![CDATA[
		   import basecom.basecomponent.*;
			import mx.events.CloseEvent;
			import basecom.sjd.containers.ResizeWindow;
			import basecom.sjd.controls.SuperTabbuttonBar;
			import basecom.sjd.containers.PopResizeWindow;
			import basecom.sjd.events.CloseEvent;
			import mx.events.ChildExistenceChangedEvent;
			import mx.events.FlexEvent;
			import basecom.sjd.controls.SuperTabBar;
			import basecom.sjd.events.CloseEvent;
			import com.model.ManiModel;
			import mx.core.UIComponent;
			import basecom.sjd.controls.tabBarClasses.*;
			[Bindable]
			public var source:Object;
			[Bindable]
			public var label_name:String;
			[Bindable]
			public var target_name:Class;
			[Bindable]
			public var model:ManiModel=ManiModel.getInstance();
			[Bindable]
			public var tabbar:SuperTabbuttonBar;
			private function addapp(e:MouseEvent):void
			{
				var mycomputer:PopResizeWindow=new(e.target.target_name)();
     			mycomputer.x=(this.parent.width-mycomputer.width)/2;
     			mycomputer.y=(this.parent.height-mycomputer.height)/2;
     			mycomputer.title=label_name;
     			this.parent.addChild(mycomputer);
     			mycomputer.addEventListener("min",minstate);
     			mycomputer.addEventListener(mx.events.CloseEvent.CLOSE,close);
     			mycomputer.addEventListener("SelectChild",SelectChild);
     			model.arrayData.addItem({label:e.target.label_name,data:mycomputer.name});
     		    tabbar.addEventListener(FlexEvent.UPDATE_COMPLETE,selectid); 

			}
			/**
			 **开始拖动 并且跑到最上面
			 **/
			 
			private function startDragSelf(e:MouseEvent):void
			{
			  if(e.target==this)
			  {
			  this.startDrag();
			  this.parent.setChildIndex(this,this.parent.numChildren-1);
			  }
			}
			/**
			 **停止拖动
			 **/
			private function stopDragSelf(e:MouseEvent):void
			{
				this.stopDrag();
			}
			/**
			 **此函数作用是 实现本窗口被选中后，与其对应的下面的按钮也要处于选中状态
			 **/
			   private function SelectChild(e:MouseEvent):void
			   {
			   	selected(SelectIndex(e.target.name));
			   }
			
			   /**
			   * *自身窗口关闭事件，关闭时先把自己从父窗口中移出，同时移出TabBar的dataprivoder中对应的数据，
			   * *从而下面的显示栏也少了与其对应的按钮；
			    **/
				private function close(e:mx.events.CloseEvent):void
				{
					
				 this.parent.removeChild(DisplayObject(e.target));
				  model.arrayData.removeItemAt(SelectIndex(e.target.name));
			
			     }
			     /**
			      **次函数主要是返回与name相同的字符的位置，
			      **/
			     private function SelectIndex(name:String):int
			     {
			     	for(var num:Number=0;num<model.arrayData.length;num++)
				     {
					 	if(model.arrayData[num]['data']==name)
					 	{  
					 	  break;//强行退出函数
					 	 }
				     }
			     	return num;
			     }
			/**
			 **在点“我的电脑”按钮的时候，会生成对应的按钮在 tabbar中，这个函数主要是让这个按钮处于选中状态
			 **同时还要他的 selectindex也对应，这样当选者其它按钮时这个按钮才会弹起来，要不是不会弹起来的，
			 **再移出他的监听器
			 **/
			private function selectid(e:FlexEvent):void
			{
				selected(model.arrayData.length-1);
				tabbar.removeEventListener(FlexEvent.UPDATE_COMPLETE,selectid); 
			}
			/**
			 **此函数主要是用来使tabbar对应的项被选中，并且点其它项的时候还能够弹出来。
			 * */
			private function selected(num:int):void
			{
				// SupTabButton(tabbar.getChildAt(model.arrayData.length-1)).selected=true;
				tabbar.selectedIndex=num;
			}
			/**
			 **使本窗口最小化~ 然后派发事件让其父监听，同时带有参数  name_str;本窗口的id
			 **/
			private function minstate(e:basecom.sjd.events.CloseEvent):void
			{
				var ev:basecom.sjd.events.CloseEvent=new basecom.sjd.events.CloseEvent("min");
				 ev.name_str=e.target.name;
				this.dispatchEvent(ev);
			}
		]]>
	</mx:Script>
	<mx:Parallel  id="para" target="{this}" duration="300">
		<mx:Zoom    zoomWidthFrom="1.0" 	zoomWidthTo="1.12"
			 zoomHeightFrom="1.0"  zoomHeightTo="1.12"/>
	    <mx:Glow   alphaFrom="1.0" alphaTo="0.3" 
        blurXFrom="0.0" blurXTo="30.0" 
        blurYFrom="0.0" blurYTo="30.0" 
        color="0xFFFFFF" />
	</mx:Parallel>
	<mx:Zoom   target="{this}"   duration="300" id="zoom" zoomWidthFrom="1.0" 
		zoomWidthTo="1.12" zoomHeightFrom="1.0"  zoomHeightTo="1.12"/>
     <mx:Zoom   target="{this}"   duration="300" id="zoom2" zoomWidthFrom="1.12" 
     	zoomWidthTo="1.0" zoomHeightFrom="1.12"  zoomHeightTo="1.0"/>
	<mx:Metadata>
		[Event(name="min",type="basecom.sjd.events.CloseEvent")]
	</mx:Metadata>
			<basecomponent:MyImage  source="{source}" width="66" height="53"/>
			<basecomponent:MyLabel text="{label_name}"/>
</basecomponent:MyVBox>
