<?xml version="1.0" encoding="utf-8"?>
<mx:Box backgroundAlpha="0"
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	width="150" height="150" 
	horizontalAlign="center" 
	verticalAlign="middle" 
	horizontalScrollPolicy="off" 
	verticalScrollPolicy="off" >
	
	<mx:Script>
		<![CDATA[
			import mx.containers.HBox;
			import mx.containers.Canvas;
			import mx.containers.VBox;
			import mx.containers.Panel;
			import mx.core.UIComponent;
			import mx.core.Application;
			import mx.controls.Image;
			import mx.effects.easing.Elastic;
			import mx.effects.easing.Exponential;
			
			[Bindable]
			private var image : Image;
			
			[Bindable]
			private var imageSmall : Number = 200;
			
			[Bindable]
			private var imageHeight : Number = 0;
			
			[Bindable]
			private var imageLarge : Number = 250;
			
			[Bindable]
			private var imageLargeHeight : Number = 0;
			
			
			private function onMouseOver( event : MouseEvent ) : void
			{
				if( data.source != null)
				{
					var w:Number = UIComponent( data.source ).width;
					var h:Number = UIComponent( data.source ) .height;
					var scarex:Number = w/imageSmall;
					var scarey:Number =h/(imageSmall*h/w);
					var x:Number = event.localX;
					var y:Number  = event.localY;
					var realx:Number = x*scarex-HBox(UIComponent( data.source ).parent).width/2;
					var realy:Number = y*scarey-HBox(UIComponent( data.source ).parent).height/2;
					trace("X:"+realx+" Y:"+realy)
					HBox(UIComponent( data.source ).parent).horizontalScrollPosition = realx;
					HBox(UIComponent( data.source ).parent).verticalScrollPosition = realy;
				}
			}
			
			private function onMouseOut( event : MouseEvent ) : void
			{

			}

			override public function set data(value:Object):void
			{
				super.data = value;
				this.removeAllChildren();
				Application.application.removeEventListener( "updateImage", onUpdateImage );
				Application.application.addEventListener( "updateImage", onUpdateImage );
				
				if(data != null){
					image = new Image();
					onUpdateImage();
					image.addEventListener( MouseEvent.MOUSE_DOWN, onMouseOver );
					image.addEventListener( MouseEvent.MOUSE_OUT, onMouseOut );
					image.useHandCursor = false;
					image.buttonMode = false;
					
					if(image.source != null)
						this.addChild(image);
					
				}
			}		
			
			private function onUpdateImage( event : Event = null ) : void
			{
				if( data.source != null)
				{
					if(image != null)
					{
						if (image.width <= imageSmall)
						{
							var b : Bitmap = new Bitmap( getUIComponentBitmapData( UIComponent( data.source ) ) );
							image.source = b;
							image.width = imageSmall;
							imageHeight = imageSmall * (b.height/b.width);
							
							imageLargeHeight = imageHeight * imageLarge/imageSmall;
							
							image.height = imageHeight; 
						}
					}
				}
			}
			
			private function getUIComponentBitmapData( target : UIComponent ) : BitmapData
		    {
			    var bd : BitmapData = new BitmapData( target.width, target.height );
			    var m : Matrix = new Matrix();
			    bd.draw( target, m );
			    return bd;
		    }
		]]>
	</mx:Script>
</mx:Box>
