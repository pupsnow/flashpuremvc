<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
	 width="100%" height="100%"  creationComplete="init();" >
	<mx:Script>
		<![CDATA[
			import mx.controls.Label;
			
			protected const lyricLineHeight:int = 24;
			
			protected var timer:Timer;
			protected var count:int = 0;
			protected var lyric:LyricModel;
			
			protected function init():void{
				/*trace(this.panel_scorll.rawChildren.numChildren);
				for(var i:int=0;i<80;i++){
					var label:Label = new Label();
					label.text = '歌词第'+i.toString()+'行~~~~~';
					//label.textAlign = 'center';
					//label.width = '100%';
					this.panel_scorll.addChild(label);
				}
				trace(this.panel_scorll.rawChildren.numChildren);
				*/
				/*this.timer = new Timer(20);
				this.timer.addEventListener(TimerEvent.TIMER,this._onTimer);
				this.timer.start();*/
			}
			
			public function setLyric(lyric:LyricModel):void{
				this.lyric =lyric;
				this.panel_scorll.removeAllChildren();
				for(var i:int=0;i<5;i++)
				{
					var label:Label = new Label();
					this.panel_scorll.addChild(label);
				} 
				for(var j:int=0;j<lyric.items.length;j++){
					var lyricItem:LyricItemModel = (lyric.items[j] as LyricItemModel);
					
					var Firstlabel:Label = new Label();
					Firstlabel.setStyle('textAlign','center');
					Firstlabel.percentWidth = 100;
					Firstlabel.text =(lyric.items[j] as LyricItemModel).text;
					trace((lyric.items[j] as LyricItemModel).text);
					this.panel_scorll.addChild(Firstlabel);
					
				}
				this.panel_scorll.verticalScrollPosition = -96;
				 for(var k:int=0;k<5;k++)
				{
					var Seclabel:Label = new Label();
					this.panel_scorll.addChild(Seclabel);
				} 
			}
			
			public function onLyricSync(evt:LyricSyncEvent):void{
				var time:Number = evt.timeState.time;
				var items:Array = this.lyric.items;
				var max:int = (items[items.length-1] as LyricItemModel).time;
				var min:int = 0;
				var totalScroll:int = items.length*this.lyricLineHeight;
				var position:int = time/(max-min)*totalScroll;
				this.panel_scorll.verticalScrollPosition = position;
				var children:Array = this.panel_scorll.getChildren();
				var num:Number = 0;
				for(var i:int=items.length-1;i>=0;i--){
					var item:LyricItemModel = items[i] as LyricItemModel;
					if(item.time<time){
						num = i;
						break;
					}
				}
				
				//var num:int = int((this.panel_scorll.height/2+this.panel_scorll.verticalScrollPosition)/this.lyricLineHeight);
				for(var m:int=0;m<children.length;m++){			
					var label:Label = children[m] as Label;
					//trace('height:'+label.height);
					if(m-5==num){
						label.setStyle('color','red');
					}else{
						label.setStyle('color','black');
					}
					
				}
			}
			
			
		]]>
	</mx:Script>
	<mx:VBox id="panel_scorll" width="100%" height="300" 
		top="100"  verticalScrollPolicy="off"
		horizontalAlign="center" verticalAlign="middle">
	</mx:VBox>
</mx:Canvas>
